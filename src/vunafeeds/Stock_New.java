/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Stock_New.java
 *
 * Created on Dec 22, 2011, 1:25:23 AM
 */
package vunafeeds;

import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.JOptionPane;

/**
 *
 * @author Magondu
 */
public class Stock_New extends javax.swing.JFrame {

    ArrayList<String> pName = new ArrayList<String>();
    ArrayList<String> pNumber = new ArrayList<String>();
    ArrayList<String> pCurrent = new ArrayList<String>();

    /** Creates new form Stock_New */
    public Stock_New() {
        initComponents();
        populate();
        setLocationRelativeTo(null);
        Date();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        units = new javax.swing.JFormattedTextField();
        product = new javax.swing.JComboBox();
        admit = new javax.swing.JButton();
        DisplayDate = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        date = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Stock");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setBackground(new java.awt.Color(110, 189, 235));
        jLabel1.setFont(new java.awt.Font("Cambria", 1, 24));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Stock");
        jLabel1.setOpaque(true);

        jLabel3.setText("Product Name:");

        jLabel4.setText("Date");

        product.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        product.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productActionPerformed(evt);
            }
        });

        admit.setBackground(new java.awt.Color(255, 255, 255));
        admit.setText("Save");
        admit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                admitActionPerformed(evt);
            }
        });

        DisplayDate.setBackground(new java.awt.Color(110, 189, 235));
        DisplayDate.setOpaque(true);

        jLabel6.setText("No. Of Units");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(DisplayDate, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(product, 0, 256, Short.MAX_VALUE)
                    .addComponent(units, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                    .addComponent(date, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE))
                .addGap(39, 39, 39))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(264, Short.MAX_VALUE)
                .addComponent(admit, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DisplayDate, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(product, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(units, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(admit, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void productActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productActionPerformed
}//GEN-LAST:event_productActionPerformed
    private void Date() {
        Calendar now = Calendar.getInstance();
        int y = now.get(Calendar.YEAR);
        int m = (now.get(Calendar.MONTH)) + 1;
        int d = now.get(Calendar.DATE);
        DisplayDate.setText("Today's date is " + d + " / " + m + " / " + y);
        DisplayDate.setVisible(true);

    }
    private void admitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_admitActionPerformed


        // String weightS = weight.getText();
        String unitsS = units.getText();
        String productS = (String) product.getSelectedItem();
        java.util.Date selectDate = date.getDate();



        if (unitsS.length() == 0 || selectDate == null) {
            JOptionPane.showMessageDialog(null, "Please fill all fields");
        } else {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd H:mm:ss");
            String formatedDate = sdf.format(selectDate);
            System.out.println(formatedDate);
            String productID = null;
            String current = null;
            String direction = "In";
            String status = "Current";

            int indexC = pName.indexOf(productS);
            productID = pNumber.get(indexC);
            current = pCurrent.get(indexC);
            int intUnits = 0;

            System.out.println(productID);
            System.out.println(current);

            try {
                int newCurrent = 0;
                int intCurrent = Integer.parseInt(current);
                intUnits = Integer.parseInt(unitsS);

                if (HomePage.toEdit.equals("EditStock")) {
                    newCurrent =  intUnits;                
                } 
                else {
                    newCurrent = intCurrent + intUnits;
                    System.out.println(current);
                }

                try {
                    Class.forName("com.mysql.jdbc.Driver");
                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/VunaFeeds", "root", "");
                    PreparedStatement psmt0 = con.prepareStatement("UPDATE new_Stock set Status = 'Old' where Status = 'Current' and ProductId = '" + productID + "'");

                    PreparedStatement psmt = con.prepareStatement("INSERT into new_Stock(productID,Date,units,direction,status,current) values (?,?,?,?,?,?)");
                    psmt.setString(1, productID);
                    psmt.setString(2, formatedDate);
                    psmt.setString(3, unitsS);
                    psmt.setString(4, direction);
                    psmt.setString(5, status);
                    psmt.setString(6, String.valueOf(newCurrent));

                    psmt0.executeUpdate();
                    psmt.executeUpdate();

                    JOptionPane.showMessageDialog(null, "Stock Entered");
                    this.dispose();
                    HomePage.toEdit = " ";
                    Stock_New win = new Stock_New();
                    win.setVisible(true);

                } catch (SQLException e) {

                    System.out.println("2 Error : " + e);
                    JOptionPane.showMessageDialog(null, "Oops!! An error occured. \n " + e);
                } catch (Exception ex) {
                    System.out.println("Error 1:" + ex);
                    JOptionPane.showMessageDialog(null, "Oops!! An error occured. \n" + ex);
                }
            } catch (NumberFormatException ne) {
                JOptionPane.showMessageDialog(null, "The units should be written in numeric format only. E.g  5 not five");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }



        }
}//GEN-LAST:event_admitActionPerformed
    private void populate() {
        product.removeAllItems();

        try {

            int Pindex = 0;

            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/vunafeeds", "root", "");
            Statement stmt = con.createStatement(ResultSet.TYPE_FORWARD_ONLY,
                    ResultSet.CONCUR_READ_ONLY);
            Statement stmt1 = con.createStatement(ResultSet.TYPE_FORWARD_ONLY,
                    ResultSet.CONCUR_READ_ONLY);

            // product.removeAllItems(); 
            ResultSet rs;
             if(HomePage.toEdit.equals("EditStock"))
             {
            rs = stmt.executeQuery("Select * from product");
             }
             else
             {
                rs = stmt.executeQuery("Select * from product where Status = 'Active'");  
             }
           // ResultSet rs = stmt.executeQuery("Select * from product where Status = 'Active'");

            while (rs.next()) {
                String productS = rs.getString("productID");
                String productName = rs.getString("productName");
                String current = null;

                ResultSet rs1 = stmt1.executeQuery("Select current from new_stock where productID = '" + productS + "' and Status = 'Current'");

                while (rs1.next()) {
                    current = rs1.getString("Current");
                }
                pName.add(Pindex, productName);
                pNumber.add(Pindex, productS);
                pCurrent.add(Pindex, current);
                product.addItem(productName);

            }
        } catch (SQLException e) {

            System.out.println("2 Error : " + e);
            JOptionPane.showMessageDialog(null, "Oops!! An error occured. \n " + e);
        } catch (Exception ex) {
            System.out.println("Error 1:" + ex);
            JOptionPane.showMessageDialog(null, "Oops!! An error occured. \n" + ex);
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Stock_New().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel DisplayDate;
    public static javax.swing.JButton admit;
    public static com.toedter.calendar.JDateChooser date;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    public static javax.swing.JComboBox product;
    public static javax.swing.JFormattedTextField units;
    // End of variables declaration//GEN-END:variables
}
