/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * EditStudents.java
 *
 * Created on Aug 3, 2011, 11:36:25 AM
 */
package vunafeeds;

import java.awt.print.PrinterException;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.Vector;
import java.util.logging.*;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Magondu
 */
public class PurchaseRecords extends javax.swing.JFrame {
private Vector<Vector> tableData;
JFrame frame;
java.util.Date from;
java.util.Date till;

    /** Creates new form EditStudents */
    public PurchaseRecords() {
        initComponents();
        tableData = new Vector<Vector>();
        setLocationRelativeTo(null);
        populate();
       // editTable.getModel().addTableModelListener(editTable);
    }

    /** This method is called from within the constructor to
     * initialize the form
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        editTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        leval = new javax.swing.JComboBox();
        Search = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        total = new javax.swing.JTextField();
        Till = new com.toedter.calendar.JDateChooser();
        From = new com.toedter.calendar.JDateChooser();
        print = new javax.swing.JButton();
        edit = new javax.swing.JButton();
        editDriver = new javax.swing.JButton();
        delete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Purchase records");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        editTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Purchase ID 	", "Product ID", "Quantity", "Rate ", "Total", "Date", "CreditorID "
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        editTable.setGridColor(new java.awt.Color(0, 204, 204));
        editTable.setInheritsPopupMenu(true);
        jScrollPane1.setViewportView(editTable);

        jLabel3.setText("From:");

        jLabel4.setText("Till");

        jLabel2.setBackground(new java.awt.Color(110, 189, 235));
        jLabel2.setFont(new java.awt.Font("Cambria", 1, 18));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Purchase records");
        jLabel2.setOpaque(true);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12));
        jLabel1.setText("Search using");

        leval.setModel(new javax.swing.DefaultComboBoxModel(new String[] {  }));

        jLabel5.setText("Total Purchases: ");

        total.setEditable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(From, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Till, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(leval, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Search, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 661, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 661, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jLabel1)
                        .addComponent(leval, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))
                    .addComponent(Till, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(From, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addContainerGap())
        );

        print.setBackground(new java.awt.Color(255, 255, 255));
        print.setText("Print");
        print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printActionPerformed(evt);
            }
        });

        edit.setBackground(new java.awt.Color(255, 255, 255));
        edit.setText("Go>>");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });

        editDriver.setText("Edit");
        editDriver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editDriverActionPerformed(evt);
            }
        });

        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(print, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 293, Short.MAX_VALUE)
                .addComponent(editDriver, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(edit, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(print, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(edit, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editDriver, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
String levalS = (String) leval.getSelectedItem();
String param = Search.getText();
tableData.clear();
from = From.getDate();

//String dateF = from.toString();

till = Till.getDate();


String search ;
if(from == null || till == null)
            {
            search = "SELECT * FROM purchases where "+levalS+" = '"+param+"' and Status = 'Active' ";
            }
else{
    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd H:mm:ss");
String f = sdf.format(from);
String t = sdf.format(till);
search = "SELECT * FROM purchases where "+levalS+" = '"+param+"'and Date > '"+f+"' and Date < '"+t+"' and Status = 'Active' ";   
}
try{
    String productID = null;
    String creditor = null;
    String prod_name = null;
    String creditor_name = null;
             Class.forName("com.mysql.jdbc.Driver");       
            Connection con  = DriverManager.getConnection("jdbc:mysql://localhost:3306/vunafeeds", "root", "");
            Statement stmt = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,
                    ResultSet.CONCUR_READ_ONLY);
            Statement stmt1 = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,
                    ResultSet.CONCUR_READ_ONLY);
                      
            Statement stmt2 = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,
                    ResultSet.CONCUR_READ_ONLY);
            ResultSet srs = stmt.executeQuery(search);
            while (srs.next()) {
                String saleID = srs.getString("PurchaseID");
                productID = srs.getString("ProductID");
                int quantity = Integer.parseInt(srs.getString("Quantity"));
                int rate = Integer.parseInt(srs.getString("Rate"));
                String date = srs.getString("Date");
                creditor = srs.getString("Supplier_ID");
                int totalS = quantity * rate;  
                ResultSet srs1 = stmt1.executeQuery("Select * from product where productId = "+productID+"");
              
             if (srs1.next())
             {
                 prod_name = srs1.getString("productname");
                 //System.out.println(prod_name);
             }
             if(creditor.equalsIgnoreCase("cash"))
             {
             creditor_name = "Cash";
             }
             else if (creditor.equalsIgnoreCase("inhouse"))
             {
             creditor_name = "Inhouse";
             }
             else
             {
             ResultSet srs2 = stmt2.executeQuery("Select * from creditors where Supplier_ID = "+creditor+"");
             if (srs2.next())
             {
                creditor_name = srs2.getString("Name");
                //System.out.println(creditor_name);
             }
             }
                tableData.add(toVector(saleID,prod_name , quantity, rate,totalS, date, creditor_name));
                
            }
             Vector columns = new Vector();
            columns.add("PurchaseID");
            columns.add("ProductID");
            columns.add("Quantity");
            columns.add("Rate");
            columns.add("Total");
            columns.add("Date");
            columns.add("Supplier_ID");     

            editTable.setModel(new DefaultTableModel(tableData,columns));
            if(tableData.isEmpty())
            {
            JOptionPane.showMessageDialog(null, "NO records found. Please try again");
            }
            else{
            int row = editTable.getRowCount();
            int r = 0;
            int intTotal = 0;
            while(r<row)
            {
                int temp = Integer.parseInt(String.valueOf(editTable.getValueAt(r, 4)));
                System.out.println(temp);
            intTotal = intTotal + temp;
            //The above code selects a value from the table, converts it to a string then to and integerand finally 
            //adds it to the total/ Impresssive i know!! 
            r++;
            }
            
            total.setText(String.valueOf(intTotal));
        }
}     
                
        
        
        
        catch(SQLException e) {
            System.out.println("2 Error : "+e);
        } catch(Exception ex) {
            System.out.println("Error 1:"+ex);
        }           // TODO add your handling code here:
    }//GEN-LAST:event_editActionPerformed

    private void printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printActionPerformed
        try {
            editTable.print();
        } catch (PrinterException ex) {
            Logger.getLogger(PurchaseRecords.class.getName()).log(Level.SEVERE, null, ex);
        }
}//GEN-LAST:event_printActionPerformed

    private void editDriverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editDriverActionPerformed
        edit();
}//GEN-LAST:event_editDriverActionPerformed
 public void edit() {
        try {
            int row = editTable.getSelectedRow();
            String saleID = (String) editTable.getValueAt(row, 0);
            String prodName = (String) editTable.getValueAt(row, 1);
            String quan = String.valueOf(editTable.getValueAt(row, 2));
            String rat = String.valueOf(editTable.getValueAt(row, 3));
            String cust = (String) editTable.getValueAt(row, 6);
            String date = (String) editTable.getValueAt(row, 5);
            HomePage.toEdit = "EditPurchases";//so as to alert change in the SQL statement for editing   

            Purchases win = new Purchases();
            //EmployeeNew.DriverID.setText(Driverid);
            Purchases.purchase.setText(saleID);
            Purchases.product.setSelectedItem(prodName);
            Purchases.quantity.setText(String.valueOf(quan));
            Purchases.rate.setText(String.valueOf(rat));
            Purchases.creditors.setSelectedItem(cust);
            //Sales.date.setDateFormatString(date);
            System.out.println(date);

            win.setVisible(true);

        } catch (Exception e) {
            System.out.println("Error: " + e);
            JOptionPane.showMessageDialog(null, "Please select a Record from the table");
        }


    }
    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        
        try {
            int row = editTable.getSelectedRow();
            String saleid = (String) editTable.getValueAt(row, 0);
            String surname = (String) editTable.getValueAt(row, 6);
            String product = (String) editTable.getValueAt(row, 1);
            
            
            int type = JOptionPane.YES_NO_OPTION;
            int option = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete " + surname + "'s Sale of " + product + "", "Confirmation", type);
            
            if (option == JOptionPane.YES_OPTION) {
                try {
                    
                    Class.forName("com.mysql.jdbc.Driver");
                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/VunaFeeds", "root", "");
                    
                    PreparedStatement pstmt = con.prepareStatement("UPDATE Purchases SET Status = 'Inactive' where Status = 'Active' and PurchaseID = " + saleid + "");
                    pstmt.executeUpdate();
                    
                    JOptionPane.showMessageDialog(null, "Purchase details deleted");
                    
                    PurchaseRecordsPanel win = new PurchaseRecordsPanel();
                    win.setVisible(true);
                } catch (SQLException e) {
                    System.out.println("2 Error : " + e);
                    JOptionPane.showMessageDialog(null, "Oops!! An error occured. \n " + e);
                } catch (Exception ex) {
                    System.out.println("Error 1:" + ex);
                    JOptionPane.showMessageDialog(null, "Oops!! An error occured. \n " + ex);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please select a Customer from the table");
        }
}//GEN-LAST:event_deleteActionPerformed

    private Vector toVector(String saleID,String productID, int quantity, int rate, int total, String date, String creditor){
        Vector vector = new Vector();
        vector.add(saleID);
        vector.add(productID);
        vector.add(quantity);
        vector.add(rate);
        vector.add(total);
        vector.add(date);
        vector.add(creditor);
       
        return vector;
      }
private void populate()
{
try{
        Class.forName("com.mysql.jdbc.Driver");       
            Connection con  = DriverManager.getConnection("jdbc:mysql://localhost:3306/vunafeeds", "root", "");
            Statement stmt = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,
                    ResultSet.CONCUR_READ_ONLY);
            ResultSet srs = stmt.executeQuery("SELECT ProductID, Supplier_ID FROM purchases");
            ResultSetMetaData md = srs.getMetaData();
            
           // while (srs.next()) 
           // {
            int colCount = md.getColumnCount();
            int c = 1;
            System.out.println(colCount);
            while(c <= colCount)
            {
          String colName = md.getColumnName(c);         
          leval.addItem(colName);
          c++;
            }
            }
       // }
         catch(SQLException e) {
            System.out.println("2 Error : "+e);
        } catch(Exception ex) {
            System.out.println("Error 1:"+ex);
        }          
}   
//public void tableEdited(TableModelEvent e)
//{
//        int row = e.getFirstRow();
//        int column = e.getColumn();
//        TableModel model = (TableModel)e.getSource();
//        String columnName = model.getColumnName(column);
//        Object data = model.getValueAt(row, column);
//        JOptionPane.showMessageDialog(null, "kuiva");
//
//} 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new PurchaseRecords().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser From;
    private javax.swing.JTextField Search;
    private com.toedter.calendar.JDateChooser Till;
    private javax.swing.JButton delete;
    private javax.swing.JButton edit;
    private javax.swing.JButton editDriver;
    private javax.swing.JTable editTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox leval;
    private javax.swing.JButton print;
    private javax.swing.JTextField total;
    // End of variables declaration//GEN-END:variables
}
