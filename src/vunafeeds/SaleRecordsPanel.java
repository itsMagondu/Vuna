/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SaleRecordsPanel.java
 *
 * Created on Nov 17, 2011, 3:23:23 PM
 */
package vunafeeds;

import java.awt.print.PrinterException;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.Vector;
import java.util.logging.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Magondu
 */
public class SaleRecordsPanel extends javax.swing.JPanel {

    private Vector<Vector> tableData;
    java.util.Date from;
    java.util.Date till;

    /** Creates new form SaleRecordsPanel */
    public SaleRecordsPanel() {
        initComponents();
        tableData = new Vector<Vector>();
        populate();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        editTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        total = new javax.swing.JTextField();
        print = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        From = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        Till = new com.toedter.calendar.JDateChooser();
        jPanel3 = new javax.swing.JPanel();
        leval = new javax.swing.JComboBox();
        Search = new javax.swing.JTextField();
        edit = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        newSale = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        editDriver = new javax.swing.JButton();
        delete = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        editTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Sale ID 	", "Product ID", "Quantity", "Rate ", "Total", "Date", "Customer"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        editTable.setGridColor(new java.awt.Color(0, 204, 204));
        editTable.setInheritsPopupMenu(true);
        jScrollPane1.setViewportView(editTable);

        jLabel2.setBackground(new java.awt.Color(110, 189, 235));
        jLabel2.setFont(new java.awt.Font("Cambria", 1, 18));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Sales records");
        jLabel2.setOpaque(true);

        jLabel5.setText("Total Sales: ");

        total.setEditable(false);

        print.setBackground(new java.awt.Color(255, 255, 255));
        print.setText("Print?");
        print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(110, 189, 235)), "Date", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 0, 12))); // NOI18N

        jLabel3.setText("From:");

        jLabel4.setText("Till:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(From, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Till, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(From, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Till, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(110, 189, 235)), "Search using?", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13))); // NOI18N

        leval.setModel(new javax.swing.DefaultComboBoxModel(new String[] {  }));

        edit.setBackground(new java.awt.Color(255, 255, 255));
        edit.setText("Go>>");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(Search, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(leval, javax.swing.GroupLayout.Alignment.LEADING, 0, 135, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(edit)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(leval, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(edit))
                .addContainerGap(4, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(110, 189, 235)), "New sale?", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13))); // NOI18N

        newSale.setText("Go>>");
        newSale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newSaleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(newSale, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(newSale)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Calibri", 2, 18));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("OR =>");

        editDriver.setText("Edit");
        editDriver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editDriverActionPerformed(evt);
            }
        });

        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 729, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 245, Short.MAX_VALUE)
                .addComponent(editDriver, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(print)
                .addGap(24, 24, 24))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 709, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(print, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(editDriver, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printActionPerformed
        try {
            editTable.print();
        } catch (PrinterException ex) {
            Logger.getLogger(SaleRecords.class.getName()).log(Level.SEVERE, null, ex);
        }
}//GEN-LAST:event_printActionPerformed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        String levalS = (String) leval.getSelectedItem();
        String param = Search.getText();
        tableData.clear();
        from = From.getDate();
        till = Till.getDate();

        try {
            String productID = null;
            String creditor = null;
            String prod_name = null;
            String creditor_name = null;
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/vunafeeds", "root", "");
            Statement stmt = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,
                    ResultSet.CONCUR_READ_ONLY);
            Statement stmt1 = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,
                    ResultSet.CONCUR_READ_ONLY);

            Statement stmt2 = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,
                    ResultSet.CONCUR_READ_ONLY);


            String search;
            if (from == null || till == null) {
                search = "SELECT * FROM sales where " + levalS + " = '" + param + "'and Status = 'Active' ";
            } else {
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd H:mm:ss");
                String f = sdf.format(from);
                String t = sdf.format(till);
                search = "SELECT * FROM sales where " + levalS + " = '" + param + "'and Date > '" + f + "' and Date < '" + t + "' and Status = 'Active' ";
            }
            ResultSet srs = stmt.executeQuery(search);
            while (srs.next()) {
                String saleID = srs.getString("SaleID");
                productID = srs.getString("ProductID");
                int quantity = Integer.parseInt(srs.getString("Quantity"));
                int rate = Integer.parseInt(srs.getString("Rate"));
                String date = srs.getString("Date");
                creditor = srs.getString("Customer_ID");
                System.out.println(creditor);
                int totalS = quantity * rate;
                ResultSet srs1 = stmt1.executeQuery("Select * from product where productId = " + productID + "");

                while (srs1.next()) {
                    prod_name = srs1.getString("productname");
                    //System.out.println(prod_name);
                }
                if (creditor.equalsIgnoreCase("cash")) {
                    creditor_name = "Cash";
                } else if (creditor.equalsIgnoreCase("inhouse")) {
                    creditor_name = "Inhouse";
                } else {
                    ResultSet srs2 = stmt2.executeQuery("Select * from debtor where Customer_ID = " + creditor + "");
                    if (srs2.next()) {
                        creditor_name = srs2.getString("Name");
                        //System.out.println(creditor_name);
                    }
                }
                tableData.add(toVector(saleID, prod_name, quantity, rate, totalS, date, creditor_name));

            }
            Vector columns = new Vector();
            columns.add("SaleID");
            columns.add("Product");
            columns.add("Quantity");
            columns.add("Rate");
            columns.add("Total");
            columns.add("Date");
            columns.add("CustomerID");

            editTable.setModel(new DefaultTableModel(tableData, columns));
            if (tableData.isEmpty()) {
                JOptionPane.showMessageDialog(null, "NO records found. Please try again");
            } else {
                int row = editTable.getRowCount();
                int r = 0;
                int intTotal = 0;
                while (r < row) {
                    int temp = Integer.parseInt(String.valueOf(editTable.getValueAt(r, 4)));
                    System.out.println(temp);
                    intTotal = intTotal + temp;
                    //The above code selects a value from the table, converts it to a string then to and integerand finally
                    //adds it to the total/ Impresssive i know!!
                    r++;
                }

                total.setText(String.valueOf(intTotal));
            }
        } catch (SQLException e) {
            System.out.println("2 Error : " + e);
        } catch (Exception ex) {
            System.out.println("Error 1:" + ex);
        }           // TODO add your handling code here:
}//GEN-LAST:event_editActionPerformed

    private void newSaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newSaleActionPerformed
        Sales win = new Sales();
        win.setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_newSaleActionPerformed

    private void editDriverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editDriverActionPerformed
        edit();
    }//GEN-LAST:event_editDriverActionPerformed
    public void edit() {
        try {
            int row = editTable.getSelectedRow();
            String saleID = (String) editTable.getValueAt(row, 0);
            String prodName = (String) editTable.getValueAt(row, 1);
            String quan = String.valueOf(editTable.getValueAt(row, 2));
            String rat = String.valueOf(editTable.getValueAt(row, 3));
            String cust = (String) editTable.getValueAt(row, 6);
            String date = (String) editTable.getValueAt(row, 5);
            HomePage.toEdit = "EditSales";//so as to alert change in the SQL statement for editing   

            Sales win = new Sales();
            //EmployeeNew.DriverID.setText(Driverid);
            Sales.sale.setText(saleID);
            Sales.product.setSelectedItem(prodName);
            Sales.quantity.setText(String.valueOf(quan));
            Sales.rate.setText(String.valueOf(rat));
            Sales.debtors.setSelectedItem(cust);
            //Sales.date.setDateFormatString(date);
            System.out.println(date);

            win.setVisible(true);

        } catch (Exception e) {
            System.out.println("Error: " + e);
            JOptionPane.showMessageDialog(null, "Please select a Record from the table");
        }


    }
    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed

        try {
            int row = editTable.getSelectedRow();
            String saleid = (String) editTable.getValueAt(row, 0);
            String surname = (String) editTable.getValueAt(row, 6);
            String product = (String) editTable.getValueAt(row, 1);


            int type = JOptionPane.YES_NO_OPTION;
            int option = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete " + surname + "'s Purchase of " + product + "", "Confirmation", type);

            if (option == JOptionPane.YES_OPTION) {
                try {

                    Class.forName("com.mysql.jdbc.Driver");
                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/VunaFeeds", "root", "");

                    PreparedStatement pstmt = con.prepareStatement("UPDATE Sales SET Status = 'Inactive' where Status = 'Active' and SaleID = " + saleid + "");
                    pstmt.executeUpdate();

                    JOptionPane.showMessageDialog(null, "Sale details deleted");

                    SaleRecordsPanel win = new SaleRecordsPanel();
                    win.setVisible(true);
                } catch (SQLException e) {
                    System.out.println("2 Error : " + e);
                    JOptionPane.showMessageDialog(null, "Oops!! An error occured. \n " + e);
                } catch (Exception ex) {
                    System.out.println("Error 1:" + ex);
                    JOptionPane.showMessageDialog(null, "Oops!! An error occured. \n " + ex);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please select a Customer from the table");
        }
    }//GEN-LAST:event_deleteActionPerformed
    private void populate() {
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/vunafeeds", "root", "");
            Statement stmt = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,
                    ResultSet.CONCUR_READ_ONLY);
            ResultSet srs = stmt.executeQuery("SELECT Customer_ID,ProductID FROM sales");
            ResultSetMetaData md = srs.getMetaData();

            // while (srs.next()) 
            // {
            int colCount = md.getColumnCount();
            int c = 1;
            System.out.println(colCount);
            while (c <= colCount) {
                String colName = md.getColumnName(c);
                leval.addItem(colName);
                c++;
            }
        } // }
        catch (SQLException e) {
            System.out.println("2 Error : " + e);
        } catch (Exception ex) {
            System.out.println("Error 1:" + ex);
        }
    }

    private Vector toVector(String saleID, String productID, int quantity, int rate, int total, String date, String creditor) {
        Vector vector = new Vector();
        vector.add(saleID);
        vector.add(productID);
        vector.add(quantity);
        vector.add(rate);
        vector.add(total);
        vector.add(date);
        vector.add(creditor);

        return vector;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser From;
    private javax.swing.JTextField Search;
    private com.toedter.calendar.JDateChooser Till;
    private javax.swing.JButton delete;
    private javax.swing.JButton edit;
    private javax.swing.JButton editDriver;
    private javax.swing.JTable editTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox leval;
    private javax.swing.JButton newSale;
    private javax.swing.JButton print;
    private javax.swing.JTextField total;
    // End of variables declaration//GEN-END:variables
}
